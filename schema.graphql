type Activated @entity(immutable: true) {
  id: Bytes!
  operator: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CoSubmitted @entity(immutable: true) {
  id: Bytes!
  timestamp: BigInt! # uint256
  co: Bytes! # bytes32
  index: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CvSubmitted @entity(immutable: true) {
  id: Bytes!
  timestamp: BigInt! # uint256
  cv: Bytes! # bytes32
  index: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DeActivated @entity(immutable: true) {
  id: Bytes!
  operator: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EIP712DomainChanged @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type IsInProcess @entity(immutable: true) {
  id: Bytes!
  isInProcess: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type L1FeeCalculationSet @entity(immutable: true) {
  id: Bytes!
  coefficient: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MerkleRootSubmitted @entity(immutable: true) {
  id: Bytes!
  timestamp: BigInt! # uint256
  merkleRoot: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipHandoverCanceled @entity(immutable: true) {
  id: Bytes!
  pendingOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipHandoverRequested @entity(immutable: true) {
  id: Bytes!
  pendingOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  oldOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RandomNumberGenerated @entity(immutable: true) {
  id: Bytes!
  round: BigInt! # uint256
  randomNumber: BigInt! # uint256
  callbackSuccess: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RandomNumberRequested @entity(immutable: true) {
  id: Bytes!
  round: BigInt! # uint256
  timestamp: BigInt! # uint256
  activatedOperators: [Bytes!]! # address[]
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RequestedToSubmitCo @entity(immutable: true) {
  id: Bytes!
  timestamp: BigInt! # uint256
  indices: [BigInt!]! # uint256[]
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RequestedToSubmitCv @entity(immutable: true) {
  id: Bytes!
  timestamp: BigInt! # uint256
  indices: [BigInt!]! # uint256[]
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RequestedToSubmitSFromIndexK @entity(immutable: true) {
  id: Bytes!
  timestamp: BigInt! # uint256
  index: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SSubmitted @entity(immutable: true) {
  id: Bytes!
  timestamp: BigInt! # uint256
  s: Bytes! # bytes32
  index: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Round @entity {
  id: String!
  round: BigInt! # uint256
  randomNumberRequested: RandomNumberRequested
  merkleRootSubmitted: MerkleRootSubmitted
  randomNumberGenerated: RandomNumberGenerated
}